//Author: John Serrano
//Free to use and distribute
//AI code is in takeTurn method
public class TicTacLife{
    static int turnCount = 0;
    static int boardSize = 12;

    public static void main(String[] args){
	String board[][] = new String[boardSize][boardSize];
	for (int i = 0; i < boardSize; i++){
	    for (int j = 0; j < boardSize; j++){
		board[j][i] = ".";
	    }
	}
	showBoard(board);

	Turner turner = new Turner();

	//main loop
	while(true){

	    mark myMark;


	    myMark = turner.takeTurn(board);

	    if (myMark==null) break;

	    board[myMark.getX()][myMark.getY()] = myMark.c;
	    //does not check legality, do that in takeTurn
	    
	    showBoard(board);
	}
	System.out.println("END");
    }

    private static void showBoard(String[][] board){
	for (int i = 0; i < boardSize; i++){
	    for (int j = 0; j < boardSize; j++){
		System.out.print(board[j][i] + " ");
	    }
	    System.out.print("\n");
	}
	System.out.println("*************");
    }
}

class Turner{

    int turnCount = 0;

    mark takeTurn(String[][] board){
	//process turn and return mark object (square chosen by AI). Todo

	mark result;

	boolean turnX;
	if ((turnCount % 2)==0) turnX = true;
	else turnX = false;

	if (turnCount==0){
	    turnCount++;
	    result = new X();
	    //System.out.println(result.c);
	    result.c="X";
	    return result;
	}
	//return null if no valid move
	return null;
    }
}
abstract class mark{
    String c;
    abstract int getX();
    abstract int getY();
    abstract void setX(int x);
    abstract void setY(int y);
    abstract boolean equals(mark other);
}
class X extends mark{
    private int x, y;
    String c = "X";
    X(){
	this.x = 2;
	this.y = 2;
    }
    X(int x, int y){
	this.x = x;
	this.y = y;
    }
    int getX(){
	return this.x;
    }
    int getY(){
	return this.y;
    }
    void setX(int x){
	this.x = x;
    }
    void setY(int y){
	this.y=y;
    }
    boolean equals(mark other){
	if (other.c.equals("X")) return true;
	return false;
    }
}
class O extends mark{
    String c = "O";
    private int x, y;
    O(){
	this.x = 2;
	this.y = 2;
    }
    O(int x, int y){
	this.x = x;
	this.y = y;
    }
    int getX(){
	return this.x;
    }
    int getY(){
	return this.y;
    }
    void setX(int x){
	this.x = x;
    }
    void setY(int y){
	this.y = y;
    }
    boolean equals(mark other){
	if (other.c.equals("O")) return true;
	return false;
    }
}
